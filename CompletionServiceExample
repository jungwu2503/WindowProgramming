import java.util.concurrent.*;

public class CompletionServiceExample extends Thread{

	public static void main(String[] args) {

		ExecutorService es = Executors.newFixedThreadPool(
				Runtime.getRuntime().availableProcessors());
		
		CompletionService<Integer> cs = new ExecutorCompletionService<Integer>(es);

		System.out.println("[작업 처리 요청]");
		for (int i = 0; i < 3; i++) {
			cs.submit(new Callable<Integer>() {
				public Integer call() throws Exception {
					int sum = 0;
					for (int i = 1; i <= 10; i++) {
						sum += i;
					}
					return sum;
				}
			});
		}
		
		System.out.println("[처리 완료된 작업 확인]");
		es.submit(new Runnable() {
			public void run() {
				while(true) {
					try {
						Future<Integer> future = cs.take();
						int value = future.get();
						System.out.println("[처리 결과] " + value);
					} catch (Exception e) {
						break;
					}
				}
			}
		});
		
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) { }
		
		es.shutdownNow();
		
	}

}
