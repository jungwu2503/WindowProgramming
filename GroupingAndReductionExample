import java.util.*;
import java.util.stream.Collectors;

public class GroupingAndReductionExample {

	public static void main(String[] args) {

		List<Student> totalList = Arrays.asList(
				new Student("홍길동", 10, Student.Sex.MALE),
				new Student("신용권", 12, Student.Sex.FEMALE),
				new Student("김자바", 10, Student.Sex.MALE),
				new Student("박파이썬", 12, Student.Sex.FEMALE)
		);

		//성별로 평균 점수를 저장하는 Map
		Map<Student.Sex, Double> mapBySex = totalList.stream()
				.collect(
					Collectors.groupingBy(
						Student::getSex,
						Collectors.averagingDouble(Student :: getScore)
					)
				);
		
		System.out.println("남학생 평균 점수: " + mapBySex.get(Student.Sex.MALE));
		System.out.println("여학생 평균 점수: " + mapBySex.get(Student.Sex.FEMALE));
		
		//성별을 쉼표로 구분한 이름을 저장하는 Map
		Map<Student.Sex, String> mapByName = totalList.stream()
				.collect(
					Collectors.groupingBy(
						Student :: getSex,
						Collectors.mapping(
								Student :: getName,
								Collectors.joining(",")
						)
					)
				);
		
		System.out.println("남학생 전체 이름: " + mapByName.get(Student.Sex.MALE));
		System.out.println("여학생 전체 이름: " + mapByName.get(Student.Sex.FEMALE));
		
	}

}

class Student {
	public enum Sex { MALE, FEMALE }
	public enum City { Seoul, Busan }
	
	private String name;
	private int score;
	private Sex sex;
	private City city;
	
	public Student(String name, int score, Sex sex) {
		this.name = name;
		this.score = score;
		this.sex = sex;
	}

	public Student(String name, int score, Sex sex, City city) {
		this.name = name;
		this.score = score;
		this.sex = sex;
		this.city = city;
	}
	
	public String getName() {
		return name;
	}
	
	public int getScore() {
		return score;
	}
	
	public Sex getSex() {
		return sex;
	}
	
	public City getCity() {
		return city;
	}
	
}
