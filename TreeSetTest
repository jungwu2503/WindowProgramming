import java.util.*;

public class TreeSetTest {

	public static void main(String[] args) {

		SortedSet parts = new TreeSet();
		parts.add(new Item("Toaster", 1234));
		parts.add(new Item("Widget", 4562));
		parts.add(new Item("Modem", 9912));
		System.out.println(parts);
		
		SortedSet sortByDescription = new TreeSet(new Comparator() {
			public int compare(Object a, Object b) {
				Item itemA = (Item)a;
				Item itemB = (Item)b;
				String descrA = itemA.getDescription();
				String descrB = itemB.getDescription();
				return descrA.compareTo(descrB);
			}
		});
		
		sortByDescription.addAll(parts);
		System.out.println(sortByDescription);
		
	}

}

class Item implements Comparable {

	private String description;
	private int partNumber;
	
	public Item(String aDescription, int aPartNumber) {
		description = aDescription;
		partNumber = aPartNumber;
	}
	
	public String getDescription() {
		return description;
	}
	
	public String toString() {
		return "[description=" + description + ", partNumber=" + partNumber + "]";
	}
	
	public boolean equals(Object other) {
		if (getClass() == other.getClass()) {
			Item otherItem = (Item)other;
			return description.equals(otherItem.description) 
					&& partNumber == otherItem.partNumber;
		}
		else 
			return false;
	}
	
	public int hashCode() {
		return 13 * description.hashCode() + 17 * partNumber;
	}
	
	@Override
	public int compareTo(Object o) {
		Item otherItem = (Item)o;
		return partNumber - otherItem.partNumber;
	}
	
}
